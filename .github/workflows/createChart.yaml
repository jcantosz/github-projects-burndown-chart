name: Generate Burndown Chart
on:
  push:
    branches:
      - main
  schedule:
    # Runs at 01:00, on day 1 and 15 of the month.
    - cron: "0 1 1,15 * *"

  workflow_dispatch:

permissions:
  contents: write
  issues: write
  
env:
  sprint_length_in_days: 15
jobs:
  generateChart:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - run: pip install -r requirements.txt

      - name: Calculate Start and End Dates
        run: |
          SPRINT_START_DATE=$(date --date="${{ env.sprint_length_in_days }} days ago" +"%Y-%m-%d")
          echo "SPRINT_START_DATE=${SPRINT_START_DATE}" >> ${GITHUB_ENV}
          
          SPRINT_END_DATE=$(date +"%Y-%m-%d")
          echo "SPRINT_END_DATE=${SPRINT_END_DATE}" >> ${GITHUB_ENV}
          
      - name: Generate Burndown Chart
        run: |
          python ./src/github_projects_burndown_chart/main.py organization my-test-proj --filepath ./chart.png

      - name: Job Summary
        run: |
          echo "Generated chart for sprint between ${SPRINT_START_DATE} - ${SPRINT_END_DATE}" >> $GITHUB_STEP_SUMMARY

      - uses: actions/upload-artifact@v4
        with:
          name: chart
          path: chart.png

      - name: create a release with the png
        run: |
          gh release create ${SPRINT_END_DATE} --latest chart.png
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create an issue with the chart
        run: |
          echo ${{ github.repository }}
          echo ${SPRINT_END_DATE}
          echo "![chart.png](github.com/${{ github.repository }}/releases/download/${SPRINT_END_DATE}/chart.png)"
          echo "github.com/${{ github.repository }}/releases/download/${SPRINT_END_DATE}/chart.png"
          
          echo "![chart.png](github.com/${{ github.repository }}/releases/download/${SPRINT_END_DATE}/chart.png)" >> $GITHUB_STEP_SUMMARY
          gh issue create --title "Sprint ending in ${SPRINT_END_DATE}" --body "![chart.png](github.com/${{ github.repository }}/releases/download/${SPRINT_END_DATE}/chart.png)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
